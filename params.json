{"name":"Snowfinch","body":"Snowfinch\r\n=========\r\n\r\nSnowfinch is a realtime web analytics application written in Ruby, and \r\nusing MongoDB. It provides everything you need to track and visualize \r\nanalytics from multiple sites. While it may not be as full featured as \r\ncommercial alternatives, it is free and released under the MIT license.\r\n\r\nCurrently, Snowfinch supports: tracking of pageviews, active visits, and \r\nvisitors for a site; pageviews and active visitors for a given page; \r\nmonitoring based on a URI query key-value pair, or based on any given \r\nnumber of referrers (think campaigns or tracking the number of visits \r\nfrom social media sites). It's not much, but this is only the beginning.  \r\nTake a look at the Roadmap section to see what's coming.\r\n\r\n\r\nGetting started\r\n---------------\r\n\r\nYou will need recent versions of Ruby (1.9.2 recommended) and MongoDB.\r\n\r\nIf you don't have Bundler installed, install it with:\r\n\r\n    gem install bundler\r\n\r\nClone the repository:\r\n\r\n    git clone https://github.com/jcxplorer/snowfinch.git\r\n\r\nEdit the following files to suit your needs:\r\n\r\n* `config/database.yml`\r\n* `config/snowfinch.yml`\r\n\r\nSome information is stored in a relational database, so you can use any \r\nthat is supported by Rails. By default it will use PostgreSQL. Edit the \r\n`config/database.yml` and `Gemfile` files accordingly if you want to use \r\na different database.\r\n\r\nInstall the application dependencies by running `bundle` in the \r\napplication directory.\r\n\r\nRun `rake db:setup` to create a database and an initial user.\r\n\r\nYou are now ready to launch the application using your favorite Ruby \r\napplication server such as Passenger or Unicorn. Sign in with the email \r\naddress _user@snowfinch.net_ and password _snowfinch_. Don't forget to \r\nchange those credentials on your account page!\r\n\r\n\r\nHigh performance and scaling\r\n----------------------------\r\n\r\nAre the pages you are tracking getting too many hits? Good for you!  \r\nFortunately you don't need to deploy entire instances of Snowfinch in \r\nmultiple hosts. All data collection and storing is a done by a Rack \r\napplication available as a gem. Just install the `snowfinch-collector` \r\ngem, and deploy using a `config.ru` file similar to the following \r\nexample:\r\n\r\n    require \"snowfinch/collector\"\r\n    Snowfinch::Collector.db = Mongo::Connection.new.db(\"snowfinch\")\r\n    run Snowfinch::Collector\r\n\r\nNow you can deploy that on several hosts and get the web scale fix you \r\nwere looking for. Throw some MongoDB shards at it as needed.\r\n\r\nBy default `snowfinch-collector` is mounted in the Rails application at \r\n\"/collector\" for easier deployment. If you run your own instance, \r\nremember to make sure that the MongoDB database is the same that the \r\nRails application is using, and configure the URI to the collector in \r\n`config/snowfinch.yml`.\r\n\r\nJust running one separate instance of `snowfinch-collector` will perform \r\nbetter than when mounted in the Rails application, as there will be no \r\noverhead from the Rails router and middleware.\r\n\r\n\r\nRoadmap\r\n-------\r\n\r\n* Display data for any given period of time (currently the past 2 days).\r\n* Collect and display referrer information.\r\n* Custom visitor tagging.\r\n* Geographic location of visitors.\r\n* Filter by custom page metadata (e.g. for A/B testing).\r\n* Asynchronous data collector.\r\n\r\n\r\nReporting bugs\r\n--------------\r\n\r\nIf you think you found a bug, please file an issue on GitHub. Please try \r\nyour best to provide steps on how to reproduce the issue you are \r\nexperiencing. Failing tests are highly appreciated!\r\n\r\n\r\nContributing\r\n------------\r\n\r\nIf you want to contribute, fork away and send a pull request. If you \r\nwant to be sure something will be merged before spending time on it, \r\nfeel free to contact me. Don't worry, hard work won't be thrown away.\r\n\r\nAlways try to provide tests with your pull requests. If you're not sure \r\non how to test something, mention it on the pull request so that you can \r\nget some help.\r\n\r\nI appreciate if you try to stick to the existing coding style, but I can \r\nalways refactor later on. If you can stick to 80 characters a line, \r\nplease do. If you don't yet, try it. It makes you write better code.\r\n\r\n\r\nCopyright and licensing\r\n-----------------------\r\n\r\nCopyright 2011, Jo√£o Cardoso. Snowfinch is released under the MIT \r\nlicense.","tagline":"Realtime web analytics","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}